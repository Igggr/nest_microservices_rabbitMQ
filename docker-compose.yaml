version: "3"
services:
  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
    - "5432:5432"
    volumes:
    # таблицы и их содержимое
    - ./db_data/postgres:/var/lib/postgresql/data
    - ./db_data/run/postgres.sock:/var/run/postgres/postgres.sock
    env_file:
    - docker.env
    networks:
    - postgres
 
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
    - "8080:80"
    volumes:
    - ./db_data/pgadmin:/root/.pgadmin
    env_file:
    - docker.env
    networks:
    - postgres

  rabbit:
    image: rabbitmq:3.10.7-management
    container_name: rabbitmq
    restart: always
    ports:
      - 15672:15672
      - 5672:5672 # AMQP порт
    environment:
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    networks:
      - rabbit

  profile:
    build:
      context: .
      dockerfile: ./apps/profile/Dockerfile
      target: development
    command: npm run start:dev profile
    env_file:
      - ./apps/profile/.env
    depends_on:
      - postgres
      - rabbit
      - auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'
    networks:
      - postgres
      - rabbit

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - ./apps/auth/.env
    depends_on:
      - postgres
      - rabbit
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - postgres
      - rabbit

networks:
  postgres:
    driver: bridge
  rabbit:
    driver: bridge